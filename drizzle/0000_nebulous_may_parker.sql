DO $$ BEGIN
 CREATE TYPE "public"."gender" AS ENUM('Male', 'Female', 'Other');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."length_unit" AS ENUM('cm', 'ft');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."plan" AS ENUM('Premium', 'Free');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."weight_unit" AS ENUM('kg', 'lb');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquest_food_category" (
	"description" text PRIMARY KEY NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquest_food_nutrient" (
	"food_id" integer NOT NULL,
	"nutrient_id" integer NOT NULL,
	"amount" numeric(12, 2) NOT NULL,
	CONSTRAINT "fitquest_food_nutrient_food_id_nutrient_id_pk" PRIMARY KEY("food_id","nutrient_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquest_food_portion" (
	"food_id" integer NOT NULL,
	"measure_unit_id" integer NOT NULL,
	"gram_weight" numeric(10, 2) NOT NULL,
	CONSTRAINT "fitquest_food_portion_food_id_measure_unit_id_pk" PRIMARY KEY("food_id","measure_unit_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquest_food" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "fitquest_food_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"description" text NOT NULL,
	"category" text
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquest_measure_unit" (
	"id" integer PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"abbreviation" text NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquest_nutrient" (
	"id" integer PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"unit_name" text NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquestaccount" (
	"provider_id" text NOT NULL,
	"provider_user_id" text NOT NULL,
	"user_id" text NOT NULL,
	CONSTRAINT "fitquestaccount_provider_id_provider_user_id_pk" PRIMARY KEY("provider_id","provider_user_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquestmagicLink" (
	"id" text PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"email" text NOT NULL,
	"token" text NOT NULL,
	"expires_at" timestamp with time zone NOT NULL,
	CONSTRAINT "fitquestmagicLink_email_unique" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquestpreference" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"length_unit" "length_unit" NOT NULL,
	"weight_unit" "weight_unit" NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquestsession" (
	"id" text PRIMARY KEY NOT NULL,
	"user_id" text NOT NULL,
	"expires_at" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "fitquestuser" (
	"id" text PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"email" text,
	"email_verified" timestamp with time zone,
	"profile_picture" text,
	"gender" "gender" NOT NULL,
	"birth_day" date NOT NULL,
	"height" numeric(10, 2) NOT NULL,
	"weight" numeric(10, 2) NOT NULL,
	"plan" "plan" DEFAULT 'Free' NOT NULL,
	CONSTRAINT "fitquestuser_email_unique" UNIQUE("email")
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "fitquest_food_nutrient" ADD CONSTRAINT "fitquest_food_nutrient_food_id_fitquest_food_id_fk" FOREIGN KEY ("food_id") REFERENCES "public"."fitquest_food"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "fitquest_food_nutrient" ADD CONSTRAINT "fitquest_food_nutrient_nutrient_id_fitquest_nutrient_id_fk" FOREIGN KEY ("nutrient_id") REFERENCES "public"."fitquest_nutrient"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "fitquest_food_portion" ADD CONSTRAINT "fitquest_food_portion_food_id_fitquest_food_id_fk" FOREIGN KEY ("food_id") REFERENCES "public"."fitquest_food"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "fitquest_food_portion" ADD CONSTRAINT "fitquest_food_portion_measure_unit_id_fitquest_measure_unit_id_fk" FOREIGN KEY ("measure_unit_id") REFERENCES "public"."fitquest_measure_unit"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "fitquest_food" ADD CONSTRAINT "fitquest_food_category_fitquest_food_category_description_fk" FOREIGN KEY ("category") REFERENCES "public"."fitquest_food_category"("description") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "fitquestaccount" ADD CONSTRAINT "fitquestaccount_user_id_fitquestuser_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."fitquestuser"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "fitquestsession" ADD CONSTRAINT "fitquestsession_user_id_fitquestuser_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."fitquestuser"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
